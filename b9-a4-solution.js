/** Problem - 1: Help The Zoo Manager
 * ржмрж╛ржХрзЗрж░ ржнрж╛ржЗ ржорж┐рж░ржкрзБрж░ ржЪрж┐рзЬрж┐рзЯрж╛ржЦрж╛ржирж╛рж░ ржорзНржпрж╛ржирзЗржЬрж╛рж░ ред ржкрзНрж░рждрж┐ржжрж┐ржи рждрж╛ржХрзЗ ржЕрж╕ржВржЦрзНржп ржЯрж┐ржХрзЗржЯ ржмрж┐ржХрзНрж░рж┐ ржХрж░рждрзЗ рж╣рзЯ ред ржЯрж╛ржХрж╛рж░ рж╣рж┐рж╕рзЗржм ржП
рждрж┐ржирж┐ рж╕ржмрж╕ржорзЯ ржЧрзЬржорж┐рж▓ ржмрж╛ржзрж┐рзЯрзЗ ржлрзЗрж▓рзЗржи ред рждрзБржорж┐ ржпрзЗрж╣рзЗрждрзБ рж╕ржжрзНржп ржбрзЗржнрзЗрж▓рзЛржкрж╛рж░ рж╣ржЪрзНржЫ рзЛ ржмрж╛ржХрзЗрж░ ржнрж╛ржЗ ржд рзЛржорж╛рж░ ржХрж╛ржЫрзЗ ржПржХржЯрж┐
рж╣рзЗрж▓рзНржк ржЪрзЗрзЯрзЗржЫрзЗ ред ржмрж╛ржХрзЗрж░ ржнрж╛ржЗ ржХрзЗ calculateMoney( ) ржирж╛ржорзЗ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи ржмрж╛ржирж┐рзЯрзЗ ржжрж┐рждрзЗ рж╣ржмрзЗ ржпрж╛ржХрзЗ ржкрзНрж░рждрж┐ржжрж┐ржи
ржЯрж┐ржХрзЗржЯ рж╕рзЗрж▓ ржХрж░рж╛рж░ рж╕ржВржЦрзНржпрж╛ ржЗржиржкрзБржЯ ржжрж┐рж▓рзЗ рж╕рзЗ рж╕ржХрж▓ ржЦрж░ржЪ ржмрж╛ржж ржжрж┐рзЯрзЗ ржо рзЛржЯ ржХржд ржЯрж╛ржХрж╛ ржмрж╛ржХрзЗрж░ ржнрж╛ржЗрж░ ржХрж╛ржЫрзЗ ржерж╛ржХрзЗ рждрж╛ ржмрж▓рзЗ
ржжрж┐рждрзЗ ржкрж╛рж░рзЗ ред
ржЪрж┐рзЬрж┐рзЯрж╛ржЦрж╛ржирж╛рзЯ ржкрзНрж░рждрж┐ ржЯрж┐ржХрзЗржЯ ржмрж┐ржХрзНрж░рж┐ рж╣рзЯ рззрзирзж ржЯрж╛ржХрж╛рзЯ ред ржЖрж░ ржмрзНржпрзЯ ржПрж░ ржоржзрзНржпрзЗ ржкрзНрж░рждрж┐ржжрж┐ржи рзз ржЬржи ржжрж╛рж░ рзЛрзЯрж╛ржи ржХрзЗ ржжрж┐рждрзЗ рж╣рзЯ рзлрзжрзж
ржЯрж╛ржХрж╛ ржПржмржВ рзо ржЬржи рж╕рзНржЯрж╛ржл ржХрзЗ рж▓рж╛ржЮрзНржЪ ржХрж░рж╛ржи рзЛрж░ ржЬржирзНржпрзЗ ржЦрж░ржЪ рж╣рзЯ ржЬржиржкрзНрж░рждрж┐ рзлрзж ржЯрж╛ржХрж╛ ржХрж░рзЗ ред

* Input :
ржлрж╛ржВрж╢ржи ржЯрж┐ ржЗржиржкрзБржЯ ржирзЗржмрзЗ ржЯрж┐ржХрзЗржЯ рж╕рзЗрж▓ ржХрж░рж╛рж░ рж╕ржВржЦрзНржпрж╛ ред ржЗржиржкрзБржЯ рж╣ржмрзЗ ржПржХржЯрж┐ ржкржЬрж┐ржЯрж┐ржн рж╕ржВржЦрзНржпрж╛ ред (0<=Input)

* Output :
ржЯрж┐ржХрзЗржЯрзЗрж░ ржЖрзЯ ржУ ржмрзНржпрзЯ ржЧрзБрж▓ рзЛ ржХрзНржпрж╛рж▓ржХрзБрж▓рзЗржЯ ржХрж░рзЗ ржмрж╛ржХрзА ржХржд ржЯрж╛ржХрж╛ ржмрж╛ржХрзЗрж░ ржнрж╛ржЗрж░ ржХрж╛ржЫрзЗ ржерж╛ржХрж▓ рзЛ рж╕рзЗржЯрж╛ржЗ ржд рзЛржорж╛рж░
ржлрж╛ржВрж╢ржи ржЖржЙржЯржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред ржЖржЙржЯржкрзБржЯ ржкржЬрж┐ржЯрж┐ржн ржирзЗржЧрзЗржЯрж┐ржн ржпрзЗ ржХ рзЛржи ржХрж┐ржЫрзБржЗ рж╣рждрзЗ ржкрж╛рж░рзЗред
 ЁЯТбржпрзЗржоржи ржЗржиржкрзБржЯ ржпржжрж┐ 10 рж╣рзЯ рждрж╛рж╣рж▓рзЗ ржЖржЙржЯржкрзБржЯ рж╣ржмрзЗ (10 * 120) - (500 + (8 * 50) ) = 300

* ChallengeЁЯУв: ржмрж╛ржХрзЗрж░ ржнрж╛ржЗ ржпржжрж┐ ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржирзЗржЧрзЗржЯрж┐ржн рж╕ржВржЦрзНржпрж╛ ржжрзЗрзЯ рждрж╛рж╣рж▓рзЗ ржд рзЛржорж╛ржХрзЗ ржПржХржЯрж╛ error ржорзНржпрж╛рж╕рзЗржЬ
ржЖржЙржЯржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗ ржжрж┐рждрзЗ рж╣ржмрзЗред
*/
function calculateMoney(ticketSale){
    const perTicketValue = 120;
    const perDayGuardSalary = 500;
    const stafQuantity = 8;
    const perStafCost = 50;

    if(ticketSale < 0 || typeof ticketSale !== 'number'){
        return 'Invalid Number';
    }
    // return ticketSale * 120 - (500 + 8 * 50);
    const totalIncome = perTicketValue * ticketSale;
    const totalExpenditure = perDayGuardSalary + stafQuantity * perStafCost;
    const remainingMoney = totalIncome - totalExpenditure;
    return remainingMoney;
    
}
console.log(calculateMoney(10));
console.log(calculateMoney(1055));
console.log(calculateMoney(93));
console.log(calculateMoney(-130));

console.log('-----------------------------');

/** Problem - 2: Good Name , Bad Name
 * рж╕рж╛рж▓ржорж╛ржи ржнрж╛ржЗ ржУ рж░рж╛рж╢рзЗржжрж╛ ржнрж╛ржмрзАрж░ ржХ рзЛрж▓ ржЬрзБрзЬрзЗ ржПрж╕рзЗржЫрзЗ ржПржХржЯрж╛ ржкрзБрждрзНрж░ рж╕ржирзНрждрж╛ржиред рж╕рж╛рж▓ржорж╛ржи ржнрж╛ржЗ ржкрзБрждрзНрж░ рж╕ржирзНрждрж╛ржирзЗрж░ ржПржХржЯрж╛ ржнрж╛рж▓ рзЛ ржирж╛ржо рж░рж╛ржЦрждрзЗ ржЪрж╛ржи ред ржХрж┐ржирзНрждрзБ рждрж╛ржжрзЗрж░ ржПрж▓рж╛ржХрж╛рзЯ ржЧрзНрж░рж╛ржорзЗрж░ ржорж╛ржирзБрж╖рж░рж╛ ржирж╛ржо ржХрзЗ ржмрзНржпрж╛ржВржЧ ржХрж░рзЗ ржЙржЪрзНржЪрж╛рж░ржи ржХрж░рзЗ ред ржпрзЗ ржоржи ржХрж╛рж░ рзЛ ржирж╛ржо salman рж╣рж▓рзЗ рждрж╛рж░рж╛ ржмрж▓рзЗ рж╕рж╛рж▓ржорж╛ржЗржирзНржпрж╛ ред ржХрж╛рж░ рзЛ ржирж╛ржо jafor рж╣рж▓рзЗ рждрж╛рж░рж╛ ржмрж▓рзЗ ржЬрж╛ржлржЗрж░ рзНржпрж╛ ред рж╕рж╛рж▓ржорж╛ржи ржнрж╛ржЗ ржЪрж╛ржи ржирж╛ рждрж╛рж░ ржкрзБрждрзНрж░ рж╕ржирзНрждрж╛ржи ржХрзЗ ржХрзЗржЙ ржПржнрж╛ржмрзЗ ржХрзНрж╖рзЗржкрж╛ржХ ред
рж╕рж╛рж▓ржорж╛ржи ржнрж╛ржЗ ржжрзЗржЦрждрзЗ ржкрзЗрж▓рзЗржи ржпрзЗ ржпрж╛ржжрзЗрж░ ржирж╛ржорзЗрж░ рж╢рзЗрж╖рзЗ a, y, i , e , o , u, w ржерж╛ржХрзЗ рждрж╛ржжрзЗрж░ ржХрзЗ ржЖрж╕рж▓рзЗ ржХрзНрж╖рзЗржкрж╛ржи рзЛ
ржпрж╛рзЯ ржирж╛ ред ржпржоржи Tonoy, utsho , Roide, shanto ржПрж╕ржм ржзрж░ржирзЗрж░ ржирж╛ржо ржЧрзБрж▓ рзЛржХрзЗ ржмрзНржпрж╛ржВржЧ ржХрж░рзЗ ржЙржЪрзНржЪрж╛рж░ржи ржХрж░рж╛ ржпрж╛рзЯ ржирж╛ ред
ржПржЦржи ржд рзЛржорж╛ржХрзЗ рж╕рж╛рж▓ржорж╛ржи ржнрж╛ржЗрж░ ржЬржирзНржп checkName() ржирж╛ржорзЗ ржПржХржЯрж╛ ржлрж╛ржВрж╢ржи рж▓рж┐ржЦрзЗ ржжрж┐рждрзЗ рж╣ржмрзЗред ржпрзЗржЯрж╛ ржПржХржЯрж╛ рж╕рзНржЯрзНрж░рж┐ ржВ ржЗржиржкрзБржЯ ржирзЗржмрзЗ ред ржПржмржВ ржлрж╛ржВрж╢ржиржЯрж┐ ржЪрзЗржХ ржХрж░рзЗ ржжрзЗржЦржмрзЗ ржирж╛ржо ржЯрж┐ рж░рж╛ржЦрж╛ ржнрж╛рж▓ рзЛ рж╣ржмрзЗ ржирж╛ ржЦрж╛рж░рж╛ржк рж╣ржмрзЗ ред ржнрж╛рж▓ рзЛ рж╣рж▓рзЗ рж╕рзЗ рж░рж┐ржЯрж╛рж░рзНржи
ржХрж░ржмрзЗ Good Name ржЖрж░ ржирж╛ржоржЯрж┐ ржЦрж╛рж░рж╛ржк рж╣рж▓рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ Bad Name

* Input : ржд рзЛржорж╛рж░ ржлрж╛ржВрж╢ржиржЯрж┐ ржЗржиржкрзБржЯ ржирзЗржмрзЗ ржПржХржЯрж┐ ржирж╛ржо ред ржЗржиржкрзБржЯржЯрж┐ рж╣ржмрзЗ ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ ржВ ред ржпрзЗ ржЦрж╛ржирзЗ character ржЧрзБрж▓ рзЛ ржЫ рзЛржЯ рж╣рж╛рждрзЗрж░ ржмрж╛ ржмрзЬ рж╣рж╛рждрзЗрж░ рж╣рждрзЗ ржкрж╛рж░рзЗред

* Output : ржлрж╛ржВрж╢ржиржЯрж┐ ржЖржЙржЯржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ ржВ ред ржпрж╛рж░ ржнрзНржпрж╛рж▓рзБрж╣ржмрзЗ Good Name ржЕржержмрж╛ Bad Name

* ChallengeЁЯУв: ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ рж╕рзНржЯрзНрж░рж┐ ржВ ржЯрж╛ржЗржкрзЗрж░ ржмрж╛ржЗрж░рзЗ ржЕржирзНржп ржпрзЗ ржХ рзЛржи ржХрж┐ржЫрзБ ржжрж┐рж▓рзЗ ржПржЯрж╛ рж╢рзБржзрзБржорж╛рждрзНрж░ тАЬinvalidтАЭ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ред
 */
function checkName(name){
    if (typeof name !== 'string'){
        return 'invalid';
    }
    let lastLetter = name[name.length - 1].toLowerCase(); //name.slice(-1).toLowerCase()
    let checkArray = ['a', 'y', 'i', 'e', 'o', 'u', 'w'];
    //let result = checkArray.includes(lastLetter);
    //return result? 'Good Name' : 'Bad Name'
    
    if(checkArray.includes(lastLetter)){
        return 'Good Name';
    }
    else{
        return 'Bad Name';
    }
}
console.log(checkName('Salman'));
console.log(checkName('RAFFE'));
console.log(checkName('Jhankar'));
console.log(checkName(199));
console.log(checkName(["Rashed"]));

console.log('-----------------------------');

/**Problem - 3: Virus in my Array
 * ржд рзЛржорж╛ржХрзЗ deleteInvalids() ржирж╛ржорзЗ ржПржоржи ржПржХржЯрж╛ ржлрж╛ржВрж╢ржи ржХрзНрж░рж┐рзЯрзЗржЯ ржХрж░рждрзЗ рж╣ржмрзЗ ржпрж╛ ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржПржХржЯрж┐ Array ржирзЗржмрзЗ ред ржлрж╛ржВрж╢ржиржЯрж┐ ржЖрж░рзЗржХржЯрж┐ Array рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ржпрзЗржЦрж╛ржирзЗ ржнрзНржпрж╛рж▓рзБржЧрзБрж▓ рзЛ рж╣ржмрзЗ рж╢рзБржзрзБ ржирж╛ржорзНржмрж╛рж░ ред ржЕрж░рзНржерж╛рзО Array ржПрж░ ржпрзЗ рж╕ржХрж▓ elements ржирж╛ржорзНржмрж╛рж░ ржирж╛ , рждрж╛ржжрзЗрж░ ржбрж┐рж▓рж┐ржЯ ржХрж░рзЗ рж╢рзБржзрзБржорж╛рждрзНрж░ ржирж╛ржорзНржмрж╛рж░ ржЧрзБрж▓ рзЛ ржХрзЗ Array ржЖржХрж╛рж░рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рждрзЗ рж╣ржмрзЗ ред рждрзБржорж┐ ржпржжрж┐ ржПржЗ ржлрж╛ржВрж╢ржирзЗ ржПржЗ [ NaN, 1, 12, 0, -1, undefined ] Array ржЯрж┐ ржкрж╛рж╕ ржХрж░ рзЛ рждрж╛рж╣рж▓рзЗ рж╕рзЗ ржд рзЛржорж╛ржХрзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ [ 1 , 12 , 0 , -1 ]

* Input :
ржлрж╛ржВрж╢ржиржЯрж┐ ржЗржиржкрзБржЯ ржирзЗржмрзЗ ржПржХржЯрж┐ Array ред Array ржПрж░ ржЙржкрж╛ржжрж╛ржи ржЧрзБрж▓ рзЛрж░ Datatype ржпрзЗ ржХ рзЛржи ржзрж░ржирзЗрж░ рж╣рждрзЗ ржкрж╛рж░рзЗ ред

* Output :
ржлрж╛ржВрж╢ржиржЯрж┐ ржЖржЙржЯржкрзБржЯ ржжрзЗржмрзЗ ржЖрж░рзЗржХржЯрж┐ Array ред Array ржПрж░ ржЙржкрж╛ржжрж╛ржи ржЧрзБрж▓ рзЛ рж╣ржмрзЗ рж╢рзБржзрзБржорж╛рждрзНрж░ ржирж╛ржорзНржмрж╛рж░ ред

* ChallengeЁЯУв: ржлрж╛ржВрж╢ржиржЯрж┐ рждрзЗ Array ржЫрж╛рзЬрж╛ ржЕржирзНржп ржХ рзЛржи ржнрзНржпрж╛рж▓рзБржкрж╛рж╕ ржХрж░рж▓рзЗ рж╕рзЗржЯрж╛ ржПржХржЯрж╛ error message рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ред
 */
function deleteinvalids(array){
    // To check type of argument is array or not (Challenge) 
    if (Array.isArray(array) !== true){
        return 'Invalid Array';
    }
    let numberArray = [];
    for (let element of array){
        if (typeof(element) === 'number' && !isNaN(element)){
            numberArray.push(element);
        }
    }  
    return numberArray;
}    
console.log(deleteinvalids([1, null, undefined, 18, -19, NaN, "12", [1, 2], { ob: "lala" }]));
console.log(deleteinvalids(["1" , {num:2} , NaN ]));
console.log(deleteinvalids([ 1 , 2 , -3 ]));
console.log(deleteinvalids({num: [ 1 , 2 , 3 ]}));

console.log('-----------------------------');

/**Problem - 4 : Make A Great Password
 * ржХрж▓рж┐ржорзБржжрзНржжрж┐ржи рж╕рж╛рж╣рзЗржм ржирждрзБржи ржл рзЛржи ржХрж┐ржирзЗ ржмрж┐ржнрж┐ржирзНржи ржУрзЯрзЗржмрж╕рж╛ржЗржЯрзЗ ржнрж┐ржЬрж┐ржЯ ржХрж░рзЗржи ржПржмржВ ржмрж┐ржнрж┐ржирзНржи ржПржкрзНрж▓рж┐ржХрзЗрж╢ржирзЗ ржПржХрж╛ржЙржирзНржЯ ржХрзНрж░рж┐рзЯрзЗржЯ ржХрж░рзЗржи ред ржХрж┐ржирзНрждрзБ рждрж┐ржирж┐ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржоржирзЗ рж░рж╛ржЦрждрзЗ ржкрж╛рж░рзЗржи ржирж╛ ред рждрж┐ржирж┐ ржПржоржи ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи ржЪрж╛ржи, ржпрзЗржЦрж╛ржирзЗ рждрж╛рж░ ржЗржиржлрж░ржорзЗрж╢ржи
ржПржмржВ ржУрзЯрзЗржмрж╕рж╛ржЗржЯ ржирзЗржо ржжрж┐рж▓рзЗ рж╕рзЗржЯрж╛ ржХрж▓рж┐ржорзБржжрзНржжрж┐ржи рж╕рж╛рж╣рзЗржмржХрзЗ ржПржХржЯрж┐ ржоржирзЗ рж░рж╛ржЦрж╛рж░ ржоржд рзЛ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржЬрзЗржирж╛рж░рзЗржЯ ржХрж░рзЗ ржжрж┐рждрзЗ ржкрж╛рж░ржмрзЗ ред рждрж╛рж░ ржЬржирзНржп password() ржирж╛ржорзЗ ржПржХржЯрж╛ ржлрж╛ржВрж╢ржи рж▓рж┐ржЦрждрзЗ рж╣ржмрзЗ ред

* Input :
ржлрж╛ржВрж╢ржиржЯрж┐ ржПржХржЯрж╛ object ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржирж┐ржмрзЗ ред ржпрзЗржЦрж╛ржирзЗ рж╢рзБржзрзБ рждрж┐ржиржЯрж┐ ржкрзНрж░ рзЛржкрж╛рж░рзНржЯрж┐ ржерж╛ржХржмрзЗ ред
{ name: "kolimuddin" , birthYear: 1999 , siteName: "google" }
тЪая╕ПржЕржмрзНржЬрзЗржХрзНржЯ ржП ржкрзНрж░ рзЛржкрж╛рж░рзНржЯрж┐ ржЧрзБрж▓ рзЛрж░ ржирж╛ржо ржПржХржжржо рж╕рзЗржЗржо рж╣рждрзЗ рж╣ржмрзЗред
Password-Structure :
Website Name(ржкрзНрж░ржержо ржЕржХрзНрж╖рж░ ржмрзЬ рж╣рж╛рждрзЗрж░ рж╣ржмрзЗ) #-ржЗржЙржЬрж╛рж░ржирзЗржо @-birthYear

* Output:
ржлрж╛ржВрж╢ржиржЯрж┐ ржЙржкрж░рзЗрж░ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ ржЕржирзБржпрж╛рзЯрзА ржПржХржЯрж╛ рж╕рзНржЯрзНрж░рж┐ ржВ ржЖржЙржЯржкрзБржЯ ржЖржХрж╛рж░рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред
Google#kolimuddin@1999

* ChallengeЁЯУв: ржпржжрж┐ ржХ рзЛржи ржПржХржЯрж╛ ржкрзНрж░ рзЛржкрж╛рж░рзНржЯрж┐ ржорж┐рж╕рж┐ ржВ ржерж╛ржХрзЗ ржЕржержмрж╛ ржпржжрж┐ birthYear 4 ржбрж┐ржЬрж┐ржЯрзЗрж░ ржирж╛ рж╣рзЯ ржлрж╛ржВрж╢ржиржЯрж┐ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ ржВ ржпрж╛рж░ ржнрзНржпрж╛рж▓рзБрж╣ржмрзЗ invalid
 */
function password(obj) {
    if (obj.name === undefined || obj.birthYear === undefined || obj.siteName === undefined || obj.birthYear.toString().length !== 4){
        return 'invalid';
    }
    let capital1stSiteName = obj.siteName[0].toUpperCase() + obj.siteName.slice(1)
    let passwordGenerate = capital1stSiteName + "#" + obj.name + "@" + obj.birthYear;
    return passwordGenerate;   
}
console.log(password({ name: "kolimuddin" , birthYear: 1999 , siteName: "google" }));
console.log(password({ name: "rahat", birthYear: 2002, siteName: "Facebook" }));
console.log(password({ name: "toky", birthYear: 200, siteName: "Facebook" }));
console.log(password({ name: "maisha", birthYear: 2002 }));

console.log('-----------------------------');

/**Problem - 5: Monthly Savings of a Freelancer
 * ржлрзНрж░рж┐рж▓рзНржпрж╛ржирзНрж╕рж╛рж░ рж╢рж╛рж╣рзЗржж ржкрзНрж░рждрж┐ ржорж╛рж╕рзЗ ржмрзЗрж╢ ржХрж┐ржЫрзБ ржкрзЗржорзЗржирзНржЯ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржжрзЗрж░ ржерзЗржХрзЗ ржкрж╛рзЯ ред ржХрж┐ржирзНрждрзБ ржкрзЗржорзЗржирзНржЯ ржПрж░ ржХрж┐ржЫрзБ ржЯрзНржпрж╛ржХрзНрж╕ ржкрж░рж┐рж╢ рзЛржз ржПржмржВ ржирж┐ржЬрзЗрж░ рж▓рж┐ржнрж┐ ржВ ржХрж╕рзНржЯ ржПрж░ ржХрж╛рж░ржирзЗ рж╕рзЗ рж╕рзЗржнрж┐ ржВрж╕ ржХрж░рждрзЗ ржкрж╛рж░рзЗ ржирж╛ ред рждрж╛рж░ рж╕рзЗржнрж┐ ржВрж╕ ржПрж░ рж╣рж┐рж╕рзЗржм ржХрж░рж╛рж░ ржЬржирзНржпрзЗ рждрж╛ржХрзЗ
monthlySavings() ржирж╛ржорзЗ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи рждрзИрж░рзА ржХрж░рзЗ ржжрж┐рждрзЗ ржпрзЗржЯрж╛ ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржирзЗржмрзЗ ржПржХржЯрж┐ Array (ржкрзНрж░рждрж┐ ржорж╛рж╕рзЗ ржкрж╛ржУрзЯрж╛ рж╕ржХрж▓ ржкрзЗржорзЗржирзНржЯ ) ржПржмржВ ржПржХржЯрж┐ Number ( рж╢рж╛рж╣рзЗржжрзЗрж░ рж▓рж┐ржнрж┐ ржВ ржХрж╕рзНржЯ ) ред
рж╢рж╛рж╣рзЗржжрзЗрж░ ржпрзЗ рж╕ржХрж▓ ржкрзЗржорзЗржирзНржЯ 3000 ржЯрж╛ржХрж╛ ржмрж╛ рждрж╛рж░ ржмрзЗрж╢рж┐ рж╕рзЗ рж╕ржХрж▓ ржкрзЗржорзЗржирзНржЯ ржерзЗржХрзЗ ржмрзНржпрж╛ржВржХ Tax рж╣рж┐рж╕рзЗржмрзЗ рзирзж% ржЯрж╛ржХрж╛ ржХрзЗржЯрзЗ ржирзЗрзЯ ред ржПржЦржи ржо рзЛржЯ ржЗржиржХрж╛ржо ржерзЗржХрзЗ Tax ржЧрзБрж▓ рзЛ ржмрж╛ржж ржжрж┐рзЯрзЗ ржПржмржВ Living cost ржмрж╛ржж ржжрж┐рзЯрзЗ ржмрж╛ржХрзА ржпрзЗ ржЯрж╛ржХрж╛ ржерж╛ржХрзЗ рж╕рзЗржЯрж╛ржЗ рж╣рж▓ рзЛ рж╢рж╛рж╣рзЗржжрзЗрж░ рж╕рзЗржнрж┐ ржВрж╕ ред ржЕрж░рзНржерж╛рзО ржлрж╛ржВрж╢ржиржЯрж┐ рж╢рж╛рж╣рзЗржжрзЗрж░ рж╕рзЗржнрж┐ ржВрж╕ ржХрзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ред ржпржжрж┐ рж╕рзЗржнрж┐ ржВрж╕ ржХрж░рж╛рж░ ржоржд рзЛ ржЯрж╛ржХрж╛ ржирж╛ ржерж╛ржХрзЗ ржЕрж░рзНржерж╛рзО рж╕рзЗржнрж┐ ржВрж╕ ржПрж░ ржнрзНржпрж╛рж▓рзБржпржжрж┐ рзж ржПрж░ ржЪрзЗрзЯрзЗ ржХржо рж╣рзЯ рждрж╛рж╣рж▓рзЗ ржлрж╛ржВрж╢ржиржЯрж┐ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ ржВ рждрж╛рж╣рж▓ рзЛ тАЬearn moreтАЭ ред

* Input :
ржлрж╛ржВрж╢ржиржЯрж┐ ржЗржиржкрзБржЯ ржирзЗржмрзЗ ржПржХржЯрж┐ Array (All payments) ржПржмржВ ржПржХржЯрж┐ number (Living cost) ред

* Output :
ржлрж╛ржВрж╢ржиржЯрж┐ ржПржХржЯрж┐ number ржЕржержмрж╛ string рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ред
    тЧП ржпржжрж┐ savings 0 ржмрж╛ рждрж╛рж░ ржерзЗржХрзЗ ржмрзЗрж╢рж┐ рж╣рзЯ рждрж╛рж╣рж▓рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ржПржХржЯрж╛ number ( Total Savings )
    тЧП ржпржжрж┐ savings 0 ржерзЗржХрзЗ ржЫ рзЛржЯ рж╣рзЯ рждрж╛рж╣рж▓рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ String ржпрж╛рж░ ржнрзНржпрж╛рж▓рзБрж╣ржмрзЗ earn more

* ChallengeЁЯУв: ржлрж╛ржВрж╢ржиржЯрж┐ рждржЦржи invalid input ржХрзЗ string ржЯрж┐ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ред
    тЧП ржпржжрж┐ ржкрзНрж░ржержо ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржЯрж┐ Array ржирж╛ рж╣рзЯ
    тЧП ржпржжрж┐ 2рзЯ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржЯрж┐ ржирж╛ржорзНржмрж╛рж░ ржирж╛ рж╣рзЯ
 */
function monthlySavings(arr , livingCost) {
    if(!Array.isArray(arr) || typeof livingCost !== "number"){
        return 'invalid input'
    }
    
    let netIncome = 0;
    for (let payment of arr){
        if(payment >= 3000){
            let tax = payment * 0.2;
            netIncome += payment - tax;    
        } else{
            netIncome += payment;
        }
    }
    
    let savings = netIncome - livingCost;
    return savings >= 0 ? savings : 'earn more';
}
console.log(monthlySavings([ 1000 , 2000 , 3000 ] , 5400));
console.log(monthlySavings([ 1000 , 2000 , 2500 ] , 5000));
console.log(monthlySavings([ 900 , 2700 , 3400] , 10000));
console.log(monthlySavings(100, [ 900 , 2700 , 3400]));

